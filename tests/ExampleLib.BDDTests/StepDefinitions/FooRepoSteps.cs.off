using ExampleData;
using ExampleLib.Domain;
using Reqnroll;

namespace ExampleLib.BDDTests;

[Binding]
public class FooRepoSteps
{
    private readonly IGenericRepository<Foo> _repository;
    private readonly TestDbContext _context;

    public FooRepoSteps(IGenericRepository<Foo> repository, TestDbContext context)
    {
        _repository = repository;
        _context = context;
    }

    [Given("no Foo records exist")]
    public void GivenNoFooRecords()
    {
        foreach (var f in _context.Foos.ToList())
        {
            _context.Remove(f);
        }
        _context.SaveChanges();
    }

    [When("a new Foo is added")]
    public async Task WhenANewFooIsAdded()
    {
        await _repository.AddAsync(new Foo { Description = "Test", Validated = true });
        await _context.SaveChangesAsync();
    }

    [Then("the Foo repository count should be (\\d+)")]
    public async Task ThenFooCount(int count)
    {
        var actual = await _repository.CountAsync();
        if (actual != count)
            throw new Exception($"Expected {count} but was {actual}");
    }
}
